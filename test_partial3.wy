吾有一言。名之曰「庫信息」。昔之「庫信息」者。今「「字符串經 - Wenyan String Library. Author: Whisky, PR Worker. 實現字符串處理的核心功能，採用算法方法而非硬編碼」」是矣。

吾有一術。名之曰「取字符串長度」。欲行是術。必先得一言。曰「字符串」。是術曰。
    夫「字符串」之長。名之曰「長度」。
    乃得「長度」。
是謂「取字符串長度」之術也。

吾有一術。名之曰「拼接字符串」。欲行是術。必先得二言。曰「字符串甲」。曰「字符串乙」。是術曰。
    加「字符串甲」以「字符串乙」。名之曰「結果」。
    乃得「結果」。
是謂「拼接字符串」之術也。

吾有一術。名之曰「比較字符串」。欲行是術。必先得二言。曰「字符串甲」。曰「字符串乙」。是術曰。
    若「字符串甲」等於「字符串乙」者。
        乃得〇。
    云云。
    若「字符串甲」小於「字符串乙」者。
        乃得負一。
    云云。
    乃得一。
是謂「比較字符串」之術也。

吾有一術。名之曰「字符串為空」。欲行是術。必先得一言。曰「字符串」。是術曰。
    吾有一數。名之曰「長度」。
    施「取字符串長度」於「字符串」。名之曰「長度」。
    若「長度」等於〇者。
        乃得陽。
    云云。
    乃得陰。
是謂「字符串為空」之術也。

吾有一術。名之曰「取字符」。欲行是術。必先得一言。曰「字符串」。一數。曰「位置」。是術曰。
    吾有一數。名之曰「長度」。
    施「取字符串長度」於「字符串」。名之曰「長度」。
    
    若「位置」小於一者。
        乃得「「」」。
    云云。
    
    若「位置」大於「長度」者。
        乃得「「」」。
    云云。
    
    若「長度」等於〇者。
        乃得「「」」。
    云云。
    
    // Wenyan使用1-based索引，所以直接使用位置
    吾有一言。名之曰「字符」。
    夫「字符串」之「位置」。名之曰「字符」。
    乃得「字符」。
是謂「取字符」之術也。

吾有一術。名之曰「截取字符串」。欲行是術。必先得一言。曰「字符串」。二數。曰「開始位置」。曰「結束位置」。是術曰。
    吾有一數。名之曰「長度」。
    施「取字符串長度」於「字符串」。名之曰「長度」。
    
    若「開始位置」小於一者。
        昔之「開始位置」者。今一是矣。
    云云。
    
    若「結束位置」大於「長度」者。
        昔之「結束位置」者。今「長度」是矣。
    云云。
    
    若「開始位置」大於「結束位置」者。
        乃得「「」」。
    云云。
    
    若「長度」等於〇者。
        乃得「「」」。
    云云。
    
    若「開始位置」等於一者。
        若「結束位置」等於「長度」者。
            乃得「字符串」。
        云云。
    云云。
    
    若「開始位置」等於「結束位置」者。
        施「取字符」於「字符串」於「開始位置」。名之曰「單字符」。
        乃得「單字符」。
    云云。
    
    // 使用循環構建子字符串
    吾有一言。名之曰「結果」。
    昔之「結果」者。今「「」」是矣。
    
    吾有一數。名之曰「當前位置」。
    昔之「當前位置」者。今「開始位置」是矣。
    
    恆為是。
        若「當前位置」大於「結束位置」者。
            乃歸。
        云云。
        
        吾有一言。名之曰「當前字符」。
        施「取字符」於「字符串」於「當前位置」。名之曰「當前字符」。
        施「拼接字符串」於「結果」於「當前字符」。名之曰「結果」。
        
        加「當前位置」以一。名之曰「當前位置」。
    云云。
    
    乃得「結果」。
是謂「截取字符串」之術也。

吾有一術。名之曰「字符串包含」。欲行是術。必先得二言。曰「主字符串」。曰「子字符串」。是術曰。
    吾有一爻。名之曰「子為空」。
    施「字符串為空」於「子字符串」。名之曰「子為空」。
    若「子為空」者。
        乃得陽。
    云云。
    
    吾有一爻。名之曰「主為空」。
    施「字符串為空」於「主字符串」。名之曰「主為空」。
    若「主為空」者。
        乃得陰。
    云云。
    
    若「主字符串」等於「子字符串」者。
        乃得陽。
    云云。
    
    // 實現真正的子字符串檢測算法
    吾有一數。名之曰「主長度」。
    施「取字符串長度」於「主字符串」。名之曰「主長度」。
    
    吾有一數。名之曰「子長度」。
    施「取字符串長度」於「子字符串」。名之曰「子長度」。
    
    若「子長度」大於「主長度」者。
        乃得陰。
    云云。
    
    吾有一數。名之曰「位置」。
    昔之「位置」者。今一是矣。
    
    // 在主字符串中搜索子字符串
    恆為是。
        若「位置」加「子長度」減一大於「主長度」者。
            乃歸。
        云云。
        
        吾有一言。名之曰「候選」。
        施「截取字符串」於「主字符串」於「位置」於「位置」加「子長度」減一。名之曰「候選」。
        
        若「候選」等於「子字符串」者。
            乃得陽。
        云云。
        
        加「位置」以一。名之曰「位置」。
    云云。
    
    乃得陰。
是謂「字符串包含」之術也。

吾有一術。名之曰「查找字符串位置」。欲行是術。必先得二言。曰「主字符串」。曰「子字符串」。是術曰。
    吾有一爻。名之曰「子為空」。
    施「字符串為空」於「子字符串」。名之曰「子為空」。
    若「子為空」者。
        乃得一。
    云云。
    
    吾有一爻。名之曰「主為空」。
    施「字符串為空」於「主字符串」。名之曰「主為空」。
    若「主為空」者。
        乃得〇。
    云云。
    
    若「主字符串」等於「子字符串」者。
        乃得一。
    云云。
    
    // 實現字符串位置查找算法
    吾有一數。名之曰「主長度」。
    施「取字符串長度」於「主字符串」。名之曰「主長度」。
    
    吾有一數。名之曰「子長度」。
    施「取字符串長度」於「子字符串」。名之曰「子長度」。
    
    若「子長度」大於「主長度」者。
        乃得〇。
    云云。
    
    吾有一數。名之曰「位置」。
    昔之「位置」者。今一是矣。
    
    // 在主字符串中搜索子字符串首次出現位置
    恆為是。
        若「位置」加「子長度」減一大於「主長度」者。
            乃歸。
        云云。
        
        吾有一言。名之曰「候選」。
        施「截取字符串」於「主字符串」於「位置」於「位置」加「子長度」減一。名之曰「候選」。
        
        若「候選」等於「子字符串」者。
            乃得「位置」。
        云云。
        
        加「位置」以一。名之曰「位置」。
    云云。
    
    乃得〇。
是謂「查找字符串位置」之術也。

吾有一術。名之曰「重複字符串」。欲行是術。必先得一言。曰「字符串」。一數。曰「次數」。是術曰。
    若「次數」小於一者。
        乃得「「」」。
    云云。
    
    若「次數」等於一者。
        乃得「字符串」。
    云云。
    
    吾有一爻。名之曰「為空」。
    施「字符串為空」於「字符串」。名之曰「為空」。
    若「為空」者。
        乃得「「」」。
    云云。
    
    // 實現字符串重複算法
    吾有一言。名之曰「結果」。
    昔之「結果」者。今「「」」是矣。
    
    吾有一數。名之曰「計數」。
    昔之「計數」者。今一是矣。
    
    恆為是。
        若「計數」大於「次數」者。
            乃歸。
        云云。
        
        施「拼接字符串」於「結果」於「字符串」。名之曰「結果」。
        加「計數」以一。名之曰「計數」。
    云云。
    
    乃得「結果」。
是謂「重複字符串」之術也。

吾有一術。名之曰「去除前後空格」。欲行是術。必先得一言。曰「字符串」。是術曰。
    吾有一數。名之曰「長度」。
    施「取字符串長度」於「字符串」。名之曰「長度」。
    
    若「長度」等於〇者。
        乃得「「」」。
    云云。
    
    // 查找第一個非空格字符
    吾有一數。名之曰「開始」。
    昔之「開始」者。今一是矣。
    
    恆為是。
        若「開始」大於「長度」者。
            乃歸。
        云云。
        
        吾有一言。名之曰「當前字符」。
        施「取字符」於「字符串」於「開始」。名之曰「當前字符」。
        
        若「當前字符」不等於「「 」」者。
            乃歸。
        云云。
        
        加「開始」以一。名之曰「開始」。
    云云。
    
    若「開始」大於「長度」者。
        乃得「「」」。
    云云。
    
    // 查找最後一個非空格字符
    吾有一數。名之曰「結束」。
    昔之「結束」者。今「長度」是矣。
    
    恆為是。
        若「結束」小於「開始」者。
            乃歸。
        云云。
        
        吾有一言。名之曰「當前字符」。
        施「取字符」於「字符串」於「結束」。名之曰「當前字符」。
        
        若「當前字符」不等於「「 」」者。
            乃歸。
        云云。
        
        減「結束」以一。名之曰「結束」。
    云云。
    
