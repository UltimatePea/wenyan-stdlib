/*
 * 錯誤處理標準 - Error Handling Standards
 * Author: Whisky, PR Worker
 * 
 * 定義統一的錯誤處理模式和異常處理標準
 * Defines unified error handling patterns and exception handling standards
 */

/* ===== 錯誤類型常量 ===== */
吾有一言。名之曰「錯誤類型參數」。
昔之「錯誤類型參數」者。今「「參數錯誤」」是矣。

吾有一言。名之曰「錯誤類型索引」。
昔之「錯誤類型索引」者。今「「索引錯誤」」是矣。

吾有一言。名之曰「錯誤類型空值」。
昔之「錯誤類型空值」者。今「「空值錯誤」」是矣。

吾有一言。名之曰「錯誤類型類型」。
昔之「錯誤類型類型」者。今「「類型錯誤」」是矣。

吾有一言。名之曰「錯誤類型運算」。
昔之「錯誤類型運算」者。今「「運算錯誤」」是矣。

吾有一言。名之曰「錯誤類型邊界」。
昔之「錯誤類型邊界」者。今「「邊界錯誤」」是矣。

吾有一言。名之曰「錯誤狀態成功」。
昔之「錯誤狀態成功」者。今「「成功」」是矣。

/* ===== 統一錯誤信息格式化 ===== */

吾有一術。名之曰「格式化錯誤信息」。欲行是術。必先得三言。曰「錯誤類型」。曰「函數名稱」。曰「錯誤詳情」。乃行是術曰。
    吾有一言。名之曰「錯誤信息」。
    加「錯誤類型」以「「：」」以「函數名稱」以「「 - 」」以「錯誤詳情」。名之曰「錯誤信息」。
    乃得「錯誤信息」。
是謂「格式化錯誤信息」之術也。

吾有一術。名之曰「報告錯誤」。欲行是術。必先得一言。曰「錯誤信息」。乃行是術曰。
    書之「❌ 」。書之「錯誤信息」。
是謂「報告錯誤」之術也。

/* ===== 參數驗證模式 ===== */

吾有一術。名之曰「驗證非空參數」。欲行是術。必先得二言。曰「參數值」。曰「參數名稱」。乃行是術曰。
    /* 檢查字符串參數是否為空 */
    夫「參數值」之長。名之曰「參數長度」。
    若「參數長度」等於〇者。
        施「格式化錯誤信息」於「錯誤類型參數」於「驗證函數」於「參數名稱」。名之曰「錯誤信息」。
        加「錯誤信息」以「「為空」」。名之曰「錯誤信息」。
        施「報告錯誤」於「錯誤信息」。
        乃得陰。
    云云。
    乃得陽。
是謂「驗證非空參數」之術也。

吾有一術。名之曰「驗證數值範圍」。欲行是術。必先得四數一言。曰「數值」。曰「最小值」。曰「最大值」。曰「參數名稱」。乃行是術曰。
    若「數值」小於「最小值」者。
        施「格式化錯誤信息」於「錯誤類型邊界」於「驗證函數」於「參數名稱」。名之曰「錯誤信息」。
        加「錯誤信息」以「「小於最小值」」。名之曰「錯誤信息」。
        施「報告錯誤」於「錯誤信息」。
        乃得陰。
    云云。
    
    若「數值」大於「最大值」者。
        施「格式化錯誤信息」於「錯誤類型邊界」於「驗證函數」於「參數名稱」。名之曰「錯誤信息」。
        加「錯誤信息」以「「大於最大值」」。名之曰「錯誤信息」。
        施「報告錯誤」於「錯誤信息」。
        乃得陰。
    云云。
    
    乃得陽。
是謂「驗證數值範圍」之術也。

/* ===== 索引驗證模式 ===== */

吾有一術。名之曰「驗證列表索引」。欲行是術。必先得一列一數一言。曰「列表」。曰「索引」。曰「函數名稱」。乃行是術曰。
    /* 檢查索引是否從1開始 */
    若「索引」小於一者。
        施「格式化錯誤信息」於「錯誤類型索引」於「函數名稱」於「「索引小於1」」。名之曰「錯誤信息」。
        施「報告錯誤」於「錯誤信息」。
        乃得陰。
    云云。
    
    /* 檢查列表是否為空 */
    夫「列表」之長。名之曰「列表長度」。
    若「列表長度」等於〇者。
        施「格式化錯誤信息」於「錯誤類型空值」於「函數名稱」於「「列表為空」」。名之曰「錯誤信息」。
        施「報告錯誤」於「錯誤信息」。
        乃得陰。
    云云。
    
    /* 檢查索引是否超出範圍 */
    若「索引」大於「列表長度」者。
        施「格式化錯誤信息」於「錯誤類型索引」於「函數名稱」於「「索引超出範圍」」。名之曰「錯誤信息」。
        施「報告錯誤」於「錯誤信息」。
        乃得陰。
    云云。
    
    乃得陽。
是謂「驗證列表索引」之術也。

/* ===== 數學運算錯誤處理 ===== */

吾有一術。名之曰「安全除法運算」。欲行是術。必先得二數一言。曰「被除數」。曰「除數」。曰「函數名稱」。乃行是術曰。
    若「除數」等於〇者。
        施「格式化錯誤信息」於「錯誤類型運算」於「函數名稱」於「「除零運算」」。名之曰「錯誤信息」。
        施「報告錯誤」於「錯誤信息」。
        乃得「錯誤」。
    云云。
    
    除「被除數」以「除數」。乃得其也。
是謂「安全除法運算」之術也。

吾有一術。名之曰「檢查數值溢出」。欲行是術。必先得二數一言。曰「數值一」。曰「數值二」。曰「運算類型」。乃行是術曰。
    /* 簡化的溢出檢查示例 */
    吾有一數。名之曰「最大值」。
    昔之「最大值」者。今九九九九九九九九九是矣。
    
    若「運算類型」等於「「加法」」者。
        若「數值一」大於「最大值」者。
            施「格式化錯誤信息」於「錯誤類型運算」於「數值運算」於「「加法溢出」」。名之曰「錯誤信息」。
            施「報告錯誤」於「錯誤信息」。
            乃得陰。
        云云。
    云云。
    
    乃得陽。
是謂「檢查數值溢出」之術也。

/* ===== 錯誤恢復模式 ===== */

吾有一術。名之曰「提供默認值」。欲行是術。必先得三物。曰「原始值」。曰「默認值」。曰「錯誤條件」。乃行是術曰。
    若「錯誤條件」等於陽者。
        乃得「默認值」。
    云云。
    乃得「原始值」。
是謂「提供默認值」之術也。

吾有一術。名之曰「重試操作」。欲行是術。必先得二數一言。曰「最大重試次數」。曰「當前重試次數」。曰「操作描述」。乃行是術曰。
    若「當前重試次數」大於「最大重試次數」者。
        施「格式化錯誤信息」於「錯誤類型運算」於「重試機制」於「操作描述」。名之曰「錯誤信息」。
        加「錯誤信息」以「「超過最大重試次數」」。名之曰「錯誤信息」。
        施「報告錯誤」於「錯誤信息」。
        乃得陰。
    云云。
    
    書之「重試操作：」。書之「操作描述」。書之「（第」。書之「當前重試次數」。書之「次）」。
    乃得陽。
是謂「重試操作」之術也。

/* ===== 錯誤日誌記錄 ===== */

吾有一術。名之曰「記錄錯誤日誌」。欲行是術。必先得二言。曰「錯誤信息」。曰「函數名稱」。乃行是術曰。
    書之「[錯誤日誌] 函數：」。書之「函數名稱」。
    書之「[錯誤日誌] 信息：」。書之「錯誤信息」。
    書之「[錯誤日誌] 時間：（需要系統時間支持）」。
是謂「記錄錯誤日誌」之術也。

/* ===== 異常處理包裝函數 ===== */

吾有一術。名之曰「安全執行」。欲行是術。必先得二言。曰「操作描述」。曰「函數名稱」。乃行是術曰。
    書之「開始安全執行：」。書之「操作描述」。
    
    /* 在實際使用中，這裡會包裝可能失敗的操作 */
    /* 這裡是示例框架 */
    
    書之「安全執行完成：」。書之「操作描述」。
    乃得陽。
是謂「安全執行」之術也。

/* ===== 邊界條件測試標準 ===== */

吾有一術。名之曰「測試邊界條件」。欲行是術。必先得一言。曰「測試函數名」。乃行是術曰。
    書之「」。
    書之「===== 邊界條件測試：」。書之「測試函數名」。書之「 =====」。
    
    /* 空輸入測試 */
    書之「測試空輸入處理...」。
    
    /* 最小值測試 */
    書之「測試最小值邊界...」。
    
    /* 最大值測試 */
    書之「測試最大值邊界...」。
    
    /* 無效輸入測試 */
    書之「測試無效輸入處理...」。
    
    書之「邊界條件測試完成」。
    書之「」。
是謂「測試邊界條件」之術也。

/* ===== 標準錯誤處理示例 ===== */

吾有一術。名之曰「示例安全字符串操作」。欲行是術。必先得一言。曰「輸入字符串」。乃行是術曰。
    /* 參數驗證 */
    施「驗證非空參數」於「輸入字符串」於「「輸入字符串」」。名之曰「驗證結果」。
    若「驗證結果」等於陰者。
        乃得「錯誤」。
    云云。
    
    /* 執行實際操作 */
    夫「輸入字符串」之長。名之曰「字符串長度」。
    
    /* 返回成功結果 */
    乃得「字符串長度」。
是謂「示例安全字符串操作」之術也。

吾有一術。名之曰「示例安全數組操作」。欲行是術。必先得一列一數。曰「輸入數組」。曰「目標索引」。乃行是術曰。
    /* 索引驗證 */
    施「驗證列表索引」於「輸入數組」於「目標索引」於「「示例數組操作」」。名之曰「驗證結果」。
    若「驗證結果」等於陰者。
        乃得「錯誤」。
    云云。
    
    /* 安全獲取元素 */
    夫「輸入數組」之「目標索引」。乃得其也。
是謂「示例安全數組操作」之術也。

/* ===== 使用指南 ===== */
/*
錯誤處理標準使用指南：

1. 參數驗證：
   - 總是驗證函數參數的有效性
   - 使用統一的錯誤信息格式
   - 提供明確的錯誤描述

2. 邊界檢查：
   - 檢查數組/列表索引範圍
   - 驗證數值邊界條件
   - 處理空值情況

3. 錯誤報告：
   - 使用統一的錯誤報告函數
   - 記錄詳細的錯誤信息
   - 提供上下文信息

4. 錯誤恢復：
   - 提供合理的默認值
   - 實現重試機制
   - 優雅地處理失敗情況

5. 測試覆蓋：
   - 測試所有錯誤條件
   - 驗證錯誤處理邏輯
   - 確保錯誤信息準確

最佳實踐：
- 失敗快速原則：盡早檢測和報告錯誤
- 一致性原則：使用統一的錯誤處理模式
- 可讀性原則：提供清晰的錯誤信息
- 健壯性原則：優雅地處理所有異常情況
*/