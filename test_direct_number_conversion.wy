注曰「Direct test of number conversion issue - Author: Whisky, PR Worker」

吾有一術。名之曰「整數餘數」。欲行是術。必先得二數。曰「被除數」。曰「除數」。乃行是術曰。
    若「除數」等於〇者。
        乃得〇。
    云云。
    
    注曰「簡單整數除法和餘數」
    吾有一數。名之曰「商」。昔之「商」者。今〇也。
    吾有一數。名之曰「當前被除數」。昔之「當前被除數」者。今「被除數」也。
    
    恆為是。
        若「當前被除數」小於「除數」者。
            乃止。
        云云。
        減「當前被除數」以「除數」。昔之「當前被除數」者。今其是矣。
        加「商」以一。昔之「商」者。今其是矣。
    云云。
    
    乃得「當前被除數」。
是謂「整數餘數」之術也。

吾有一術。名之曰「整數除法」。欲行是術。必先得二數。曰「被除數」。曰「除數」。乃行是術曰。
    若「除數」等於〇者。
        乃得〇。
    云云。
    若「被除數」等於〇者。
        乃得〇。
    云云。
    
    吾有一數。名之曰「商」。昔之「商」者。今〇也。
    吾有一數。名之曰「當前被除數」。昔之「當前被除數」者。今「被除數」也。
    
    恆為是。
        若「當前被除數」小於「除數」者。
            乃止。
        云云。
        減「當前被除數」以「除數」。昔之「當前被除數」者。今其是矣。
        加「商」以一。昔之「商」者。今其是矣。
    云云。
    
    乃得「商」。
是謂「整數除法」之術也。

吾有一術。名之曰「數位轉字符算法」。欲行是術。必先得一數。曰「數位」。乃行是術曰。
    吾有一列。名之曰「字符陣列」。
    充「字符陣列」以「「0」」。充「字符陣列」以「「1」」。充「字符陣列」以「「2」」。
    充「字符陣列」以「「3」」。充「字符陣列」以「「4」」。充「字符陣列」以「「5」」。
    充「字符陣列」以「「6」」。充「字符陣列」以「「7」」。充「字符陣列」以「「8」」。
    充「字符陣列」以「「9」」。
    
    吾有一數。名之曰「索引」。昔之「索引」者。今「數位」也。
    吾有一數。名之曰「計數器」。昔之「計數器」者。今〇也。
    吾有一言。名之曰「結果字符」。昔之「結果字符」者。今「「」」也。
    
    凡「字符陣列」中之「當前字符」。
        若「計數器」等於「索引」者。
            昔之「結果字符」者。今「當前字符」也。
        云云。
        加「計數器」以一。名之曰「計數器」。
    云云。
    
    乃得「結果字符」。
是謂「數位轉字符算法」之術也。

注曰「BUGGY VERSION - The problematic function」
吾有一術。名之曰「數字轉字符串_問題版」。欲行是術。必先得一數。曰「數值」。乃行是術曰。
    若「數值」等於〇者。乃得「「0」」。云云。
    
    吾有一數。名之曰「是否負數」。昔之「是否負數」者。今〇也。
    吾有一數。名之曰「工作數值」。昔之「工作數值」者。今「數值」也。
    若「數值」小於〇者。
        昔之「是否負數」者。今一也。
        減〇以「數值」。名之曰「工作數值」。
    云云。
    
    吾有一言。名之曰「結果字符串」。昔之「結果字符串」者。今「「」」也。
    
    恆為是。
        若「工作數值」等於〇者。
            乃止。
        云云。
        
        施「整數餘數」於「工作數值」於十。名之曰「數位」。
        施「數位轉字符算法」於「數位」。名之曰「數位字符」。
        
        注曰「BUG HERE: This line is problematic」
        加「數位字符」以「結果字符串」。昔之「結果字符串」者。今其是矣。
        
        施「整數除法」於「工作數值」於十。昔之「工作數值」者。今其是矣。
    云云。
    
    若「結果字符串」等於「「」」者。
        昔之「結果字符串」者。今「「0」」也。
    云云。
    
    若「是否負數」等於一者。
        加「「-」」以「結果字符串」。昇之「結果字符串」者。今其是矣。
    云云。
    
    乃得「結果字符串」。
是謂「數字轉字符串_問題版」之術也。

注曰「FIXED VERSION - The corrected function」
吾有一術。名之曰「數字轉字符串_修復版」。欲行是術。必先得一數。曰「數值」。乃行是術曰。
    若「數值」等於〇者。乃得「「0」」。云云。
    
    吾有一數。名之曰「是否負數」。昔之「是否負數」者。今〇也。
    吾有一數。名之曰「工作數值」。昔之「工作數值」者。今「數值」也。
    若「數值」小於〇者。
        昔之「是否負數」者。今一也。
        減〇以「數值」。名之曰「工作數值」。
    云云。
    
    吾有一言。名之曰「結果字符串」。昔之「結果字符串」者。今「「」」也。
    
    恆為是。
        若「工作數值」等於〇者。
            乃止。
        云云。
        
        施「整數餘數」於「工作數值」於十。名之曰「數位」。
        施「數位轉字符算法」於「數位」。名之曰「數位字符」。
        
        注曰「FIX: Use proper variable assignment」
        加「數位字符」以「結果字符串」。名之曰「結果字符串」。
        
        施「整數除法」於「工作數值」於十。名之曰「工作數值」。
    云云。
    
    若「結果字符串」等於「「」」者。
        昔之「結果字符串」者。今「「0」」也。
    云云。
    
    若「是否負數」等於一者。
        加「「-」」以「結果字符串」。名之曰「結果字符串」。
    云云。
    
    乃得「結果字符串」。
是謂「數字轉字符串_修復版」之術也。

注曰「Test both versions」
吾嘗試「「Testing problematic version:」」。
施「數字轉字符串_問題版」於一二三。名之曰「問題結果」。
吾嘗試「「123 -> 」」。
吾嘗試「問題結果」。

吾嘗試「「Testing fixed version:」」。
施「數字轉字符串_修復版」於一二三。名之曰「修復結果」。
吾嘗試「「123 -> 」」。
吾嘗試「修復結果」。