/* Standalone Math Library Test */
/* Author: Whisky, PR Worker - Delta testing infrastructure fix */

/* Simple addition function */
吾有一術。名之曰「加」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。
    加「甲」以「乙」。名之曰「結果」。
    乃得「結果」。
是謂「加」之術也。

/* Simple subtraction function */
吾有一術。名之曰「減」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。
    減「甲」以「乙」。名之曰「結果」。
    乃得「結果」。
是謂「減」之術也。

/* Simple multiplication function */
吾有一術。名之曰「乘」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。
    乘「甲」以「乙」。名之曰「結果」。
    乃得「結果」。
是謂「乘」之術也。

/* Simple division function */
吾有一術。名之曰「除」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。
    若「乙」等於〇者。
        乃得〇。
    云云。
    除「甲」以「乙」。名之曰「結果」。
    乃得「結果」。
是謂「除」之術也。

/* Simple square root function */
吾有一術。名之曰「平方根」。欲行是術。必先得一數。曰「數值」。乃行是術曰。
    若「數值」小於〇者。
        乃得〇。
    云云。
    若「數值」等於〇者。
        乃得〇。
    云云。
    若「數值」等於一者。
        乃得一。
    云云。
    吾有一數。名之曰「猜測」。昔之「猜測」者。今「數值」也。
    吾有一數。名之曰「計數」。昔之「計數」者。今〇也。
    恆為是。
        若「計數」大於十者。
            乃止。
        云云。
        除「數值」以「猜測」。名之曰「商」。
        加「猜測」以「商」。名之曰「和」。
        除「和」以二。名之曰「猜測」。
        加「計數」以一。名之曰「計數」。
    云云。
    乃得「猜測」。
是謂「平方根」之術也。

/* === Tests Begin === */
吾有一言。曰「「=== 算經庫獨立驗證測試 ===」」。書之。

/* Test addition */
施「加」於三於五。名之曰「加法結果」。
吾有一言。曰「「加法功能正常: 3 + 5 = 」」。書之。
書「加法結果」。

/* Test subtraction */
施「減」於十於三。名之曰「減法結果」。
吾有一言。曰「「減法功能正常: 10 - 3 = 」」。書之。
書「減法結果」。

/* Test multiplication */
施「乘」於四於六。名之曰「乘法結果」。
吾有一言。曰「「乘法功能正常: 4 × 6 = 」」。書之。
書「乘法結果」。

/* Test division */
施「除」於十二於三。名之曰「除法結果」。
吾有一言。曰「「除法功能正常: 12 ÷ 3 = 」」。書之。
書「除法結果」。

/* Test square root */
施「平方根」於九。名之曰「平方根結果」。
吾有一言。曰「「平方根功能: √9 ≈ 」」。書之。
書「平方根結果」。

/* Test division by zero protection */
施「除」於五於〇。名之曰「除零結果」。
吾有一言。曰「「除零安全處理: 5 ÷ 0 = 」」。書之。
書「除零結果」。

/* Test negative square root protection */
施「平方根」於負四。名之曰「負平方根結果」。
吾有一言。曰「「負數平方根處理: √(-4) = 」」。書之。
書「負平方根結果」。

吾有一言。曰「「=== 基本功能測試完成 ===」」。書之。