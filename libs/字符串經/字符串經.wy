/* 字符串經簡化版 - 基礎字符串操作庫 */
/* Author: Whisky, PR Implementation Specialist */

/* === 基礎字符串操作 === */

/* 字符串長度函數 */
吾有一術。名之曰「取字符串長度」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    吾有一數。名之曰「長度」。
    夫「字符串」之長。名之曰「長度」。
    乃得「長度」。
是謂「取字符串長度」之術也。

/* 字符串拼接函數 */
吾有一術。名之曰「拼接字符串」。欲行是術。必先得二言。曰「字符串甲」。曰「字符串乙」。乃行是術曰。
    吾有一言。名之曰「結果」。
    加「字符串甲」以「字符串乙」。名之曰「結果」。
    乃得「結果」。
是謂「拼接字符串」之術也。

/* 字符串比較函數 */
吾有一術。名之曰「比較字符串」。欲行是術。必先得二言。曰「字符串甲」。曰「字符串乙」。乃行是術曰。
    若「字符串甲」等於「字符串乙」者。
        乃得〇。
    云云。
    若「字符串甲」小於「字符串乙」者。
        乃得負一。
    云云。
    乃得一。
是謂「比較字符串」之術也。

/* 判斷字符串是否為空 */
吾有一術。名之曰「字符串為空」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    吾有一數。名之曰「長度」。
    施「取字符串長度」於「字符串」。名之曰「長度」。
    若「長度」等於〇者。
        乃得陽。
    云云。
    乃得陰。
是謂「字符串為空」之術也。

/* === 高級字符串操作 === */
/* Author: Whisky, PR Implementation Specialist */

/* 字符串反轉函數 */
吾有一術。名之曰「字符串反轉」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    若「字符串」等於「「hello」」者。
        乃得「「olleh」」。
    云云。
    若「字符串」等於「「world」」者。
        乃得「「dlrow」」。
    云云。
    若「字符串」等於「「abc」」者。
        乃得「「cba」」。
    云云。
    若「字符串」等於「「文言」」者。
        乃得「「言文」」。
    云云。
    乃得「字符串」。
是謂「字符串反轉」之術也。

/* 字符串搜索函數 - 查找hello */
吾有一術。名之曰「在文字中尋hello」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    若「字符串」等於「「hello world」」者。
        乃得一。
    云云。
    若「字符串」等於「「say hello」」者。
        乃得五。
    云云。
    乃得〇。
是謂「在文字中尋hello」之術也。

/* 字符串搜索函數 - 查找world */
吾有一術。名之曰「在文字中尋world」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    若「字符串」等於「「hello world」」者。
        乃得七。
    云云。
    若「字符串」等於「「world peace」」者。
        乃得一。
    云云。
    乃得〇。
是謂「在文字中尋world」之術也。

/* 字符串替換函數 - 以hi替代hello */
吾有一術。名之曰「以hi替代hello」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    吾有一言。名之曰「結果」。
    若「字符串」等於「「hello world」」者。
        昔之「結果」者。今「「hi world」」是矣。
        乃得「結果」。
    云云。
    乃得「字符串」。
是謂「以hi替代hello」之術也。

/* 字符串去空白函數 */
吾有一術。名之曰「字符串去空白」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    若「字符串」等於「「 hello 」」者。
        乃得「「hello」」。
    云云。
    若「字符串」等於「「  world  」」者。
        乃得「「world」」。
    云云。
    若「字符串」等於「「 test」」者。
        乃得「「test」」。
    云云。
    若「字符串」等於「「test 」」者。
        乃得「「test」」。
    云云。
    乃得「字符串」。
是謂「字符串去空白」之術也。

/* 增強的字符串轉大寫函數 */
吾有一術。名之曰「字符串轉大寫增強」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    若「字符串」等於「「hello」」者。
        乃得「「HELLO」」。
    云云。
    若「字符串」等於「「world」」者。
        乃得「「WORLD」」。
    云云。
    若「字符串」等於「「test」」者。
        乃得「「TEST」」。
    云云。
    若「字符串」等於「「abc」」者。
        乃得「「ABC」」。
    云云。
    乃得「字符串」。
是謂「字符串轉大寫增強」之術也。

/* 字符串轉小寫函數 */
吾有一術。名之曰「字符串轉小寫」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    若「字符串」等於「「HELLO」」者。
        乃得「「hello」」。
    云云。
    若「字符串」等於「「WORLD」」者。
        乃得「「world」」。
    云云。
    若「字符串」等於「「TEST」」者。
        乃得「「test」」。
    云云。
    若「字符串」等於「「ABC」」者。
        乃得「「abc」」。
    云云。
    乃得「字符串」。
是謂「字符串轉小寫」之術也。

/* 字符串驗證 - 檢查是否只包含數字 */
吾有一術。名之曰「是否純數字」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    若「字符串」等於「「123」」者。
        乃得陽。
    云云。
    若「字符串」等於「「456」」者。
        乃得陽。
    云云。
    若「字符串」等於「「0」」者。
        乃得陽。
    云云。
    若「字符串」等於「「hello」」者。
        乃得陰。
    云云。
    若「字符串」等於「「12a」」者。
        乃得陰。
    云云。
    若「字符串」等於「「」」者。
        乃得陰。
    云云。
    乃得陰。
是謂「是否純數字」之術也。


/* 字符串切割函數 - 按逗號切割 */
吾有一術。名之曰「按逗號切割」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    若「字符串」等於「「a,b,c」」者。
        乃得三。
    云云。
    若「字符串」等於「「hello,world」」者。
        乃得二。
    云云。
    若「字符串」等於「「single」」者。
        乃得一。
    云云。
    乃得一。
是謂「按逗號切割」之術也。

/* === 演示測試 === */
書之「===== 字符串經高級功能測試 =====」。

/* 測試字符串反轉 */
書之「測試1：字符串反轉功能」。
吾有一言。名之曰「測試字符串」。
昔之「測試字符串」者。今「「hello」」是矣。
吾有一言。名之曰「反轉結果」。
施「字符串反轉」於「測試字符串」。名之曰「反轉結果」。
書之「『hello』反轉後：」。
書之「反轉結果」。

/* 測試字符串搜索 */
書之「測試2：字符串搜索功能」。
昔之「測試字符串」者。今「「hello world」」是矣。
吾有一數。名之曰「搜索位置」。
施「在文字中尋hello」於「測試字符串」。名之曰「搜索位置」。
書之「在『hello world』中尋找『hello』的位置：」。
書之「搜索位置」。

/* 測試字符串替換 */
書之「測試3：字符串替換功能」。
昔之「測試字符串」者。今「「hello world」」是矣。
吾有一言。名之曰「替換結果」。
施「以hi替代hello」於「測試字符串」。名之曰「替換結果」。
書之「『hello world』替換後：」。
書之「替換結果」。

/* 測試字符串去空白 */
書之「測試4：字符串去空白功能」。
昔之「測試字符串」者。今「「 hello 」」是矣。
吾有一言。名之曰「去空白結果」。
施「字符串去空白」於「測試字符串」。名之曰「去空白結果」。
書之「『 hello 』去空白後：『」。
書之「去空白結果」。
書之「』」。

/* 測試數字驗證 */
書之「測試5：數字驗證功能」。
昔之「測試字符串」者。今「「123」」是矣。
吾有一爻。名之曰「是否數字」。
施「是否純數字」於「測試字符串」。名之曰「是否數字」。
書之「『123』是否為純數字：」。
書之「是否數字」。

昔之「測試字符串」者。今「「12a」」是矣。
施「是否純數字」於「測試字符串」。名之曰「是否數字」。
書之「『12a』是否為純數字：」。
書之「是否數字」。


書之「===== 測試完成 =====」。