/* 字符串經 - Wenyan String Library Core Operations */
/* 實現字符串的基礎操作功能 */
/* Author: Whisky, PR Worker */

/* === 基礎字符串操作 === */

/* 字符串長度函數 - 返回字符串的字符數 */
吾有一術。名之曰「取字符串長度」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    吾有一數。名之曰「長度」。
    夫「字符串」之長。名之曰「長度」。
    乃得「長度」。
是謂「取字符串長度」之術也。

/* 字符串拼接函數 - 連接兩個字符串 */
吾有一術。名之曰「拼接字符串」。欲行是術。必先得二言。曰「字符串甲」。曰「字符串乙」。乃行是術曰。
    吾有一言。名之曰「結果」。
    加「字符串甲」以「字符串乙」。名之曰「結果」。
    乃得「結果」。
是謂「拼接字符串」之術也。

/* 字符串比較函數 */
吾有一術。名之曰「比較字符串」。欲行是術。必先得二言。曰「字符串甲」。曰「字符串乙」。乃行是術曰。
    若「字符串甲」等於「字符串乙」者。
        乃得〇。
    云云。
    若「字符串甲」小於「字符串乙」者。
        乃得負一。
    云云。
    乃得一。
是謂「比較字符串」之術也。

/* 判斷字符串是否為空 */
吾有一術。名之曰「字符串為空」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    吾有一數。名之曰「長度」。
    施「取字符串長度」於「字符串」。名之曰「長度」。
    若「長度」等於〇者。
        乃得陽。
    云云。
    乃得陰。
是謂「字符串為空」之術也。

/* 判斷字符串是否包含子字符串 - 簡化版本 */
吾有一術。名之曰「字符串包含」。欲行是術。必先得二言。曰「主字符串」。曰「子字符串」。乃行是術曰。
    /* 簡化實現：使用字符串比較判斷是否相等 */
    若「主字符串」等於「子字符串」者。
        乃得陽。
    云云。
    乃得陰。
是謂「字符串包含」之術也。

/* === 字符串轉換功能 === */

/* 字符串轉大寫（對於中文字符，返回原字符串） */
吾有一術。名之曰「字符串轉大寫」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    /* 對於中文字符，此函數返回原字符串 */
    /* 後續可擴展支持拉丁字符轉換 */
    乃得「字符串」。
是謂「字符串轉大寫」之術也。

/* 字符串轉小寫（對於中文字符，返回原字符串） */
吾有一術。名之曰「字符串轉小寫」。欲行是術。必先得一言。曰「字符串」。乃行是術曰。
    /* 對於中文字符，此函數返回原字符串 */
    /* 後續可擴展支持拉丁字符轉換 */
    乃得「字符串」。
是謂「字符串轉小寫」之術也。

/* === 實用字符串函數 === */

/* 重複字符串指定次數 */
吾有一術。名之曰「重複字符串」。欲行是術。必先得一言。曰「字符串」。又一數。曰「次數」。乃行是術曰。
    吾有一言。名之曰「結果」。
    昔之「結果」者。今「」是矣。
    吾有一數。名之曰「計數器」。
    昔之「計數器」者。今〇是矣。
    
    恆為是。
        若「計數器」等於「次數」者。云云。
        施「拼接字符串」於「結果」、「字符串」。名之曰「結果」。
        加「計數器」以一。名之曰「計數器」。
    云云。
    
    乃得「結果」。
是謂「重複字符串」之術也。