/* Array Library - Rebuilt with correct wenyan syntax */
/* Author: Whisky, PR Worker */

/* Proper wenyan error message constants */
吾有一言。名之曰「錯誤小於一」。
昔之「錯誤小於一」者。今「錯誤：索引不可小於一」是矣。

吾有一言。名之曰「錯誤超出範圍」。
昔之「錯誤超出範圍」者。今「錯誤：索引超出陣列範圍」是矣。

吾有一言。名之曰「錯誤空陣列」。
昔之「錯誤空陣列」者。今「錯誤：不可對空陣列執行此操作」是矣。

吾有一言。名之曰「錯誤無效參數」。
昔之「錯誤無效參數」者。今「錯誤：參數無效」是矣。

吾有一言。名之曰「成功」。
昔之「成功」者。今「操作成功完成」是矣。

/* === Array Creation and Initialization === */

/* Create array with specified size and fill value */
吾有一術。名之曰「創建陣列」。欲行是術。必先得二物。曰「大小」。曰「填充值」。乃行是術曰。
    吾有一列。名之曰「新陣列」。
    吾有一數。名之曰「計數器」。
    昔之「計數器」者。今一是矣。
    
    恆為是。
        若「計數器」大於「大小」者。乃止。云云。
        充「新陣列」以「填充值」。
        加「計數器」以一。昔之「計數器」者。今其是矣。
    云云。
    
    乃得「新陣列」。
是謂「創建陣列」之術也。

/* Create empty array */
吾有一術。名之曰「創建空陣列」。欲行是術。乃行是術曰。
    吾有一列。名之曰「空陣列」。
    乃得「空陣列」。
是謂「創建空陣列」之術也。

/* === Array Length and Size === */

/* Get array length */
吾有一術。名之曰「取陣列長度」。欲行是術。必先得一物。曰「陣列」。乃行是術曰。
    夫「陣列」之長。名之曰「長度值」。
    乃得「長度值」。
是謂「取陣列長度」之術也。

/* Check if array is empty */
吾有一術。名之曰「陣列為空」。欲行是術。必先得一物。曰「陣列」。乃行是術曰。
    若「陣列」之長等於〇者。
        乃得陽。
    云云。
    乃得陰。
是謂「陣列為空」之術也。

/* === Element Access and Modification === */

/* Get array element with bounds checking */
吾有一術。名之曰「取陣列元素」。欲行是術。必先得二物。曰「陣列」。曰「索引」。乃行是術曰。
    若「索引」小於一者。
        乃得「錯誤小於一」。
    云云。
    若「索引」大於「陣列」之長者。
        乃得「錯誤超出範圍」。
    云云。
    
    夫「陣列」之「索引」。名之曰「元素值」。
    乃得「元素值」。
是謂「取陣列元素」之術也。

/* Set array element with bounds checking - returns new array */
吾有一術。名之曰「設陣列元素」。欲行是術。必先得三物。曰「陣列」。曰「索引」。曰「新值」。乃行是術曰。
    若「索引」小於一者。
        乃得「錯誤小於一」。
    云云。
    夫「陣列」之長。名之曰「陣列長度」。
    若「索引」大於「陣列長度」者。
        乃得「錯誤超出範圍」。
    云云。
    
    /* Create new array with modified element */
    吾有一列。名之曰「新陣列」。
    吾有一數。名之曰「當前索引」。
    昔之「當前索引」者。今一是矣。
    
    恆為是。
        若「當前索引」大於「陣列長度」者。乃止。云云。
        若「當前索引」等於「索引」者。
            充「新陣列」以「新值」。
        云云。
        若「當前索引」不等於「索引」者。
            夫「陣列」之「當前索引」。名之曰「原元素」。
            充「新陣列」以「原元素」。
        云云。
        加「當前索引」以一。昔之「當前索引」者。今其是矣。
    云云。
    
    乃得「新陣列」。
是謂「設陣列元素」之術也。

/* === Array Operations === */

/* Append element to array */
吾有一術。名之曰「陣列追加」。欲行是術。必先得二物。曰「陣列」。曰「新元素」。乃行是術曰。
    充「陣列」以「新元素」。
    乃得「陣列」。
是謂「陣列追加」之術也。

/* Prepend element to array */
吾有一術。名之曰「陣列前置」。欲行是術。必先得二物。曰「陣列」。曰「新元素」。乃行是術曰。
    吾有一列。名之曰「新陣列」。
    充「新陣列」以「新元素」。
    
    吾有一數。名之曰「索引」。
    昔之「索引」者。今一是矣。
    
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        充「新陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「新陣列」。
是謂「陣列前置」之術也。

/* Insert element at position */
吾有一術。名之曰「陣列插入」。欲行是術。必先得三物。曰「陣列」。曰「位置」。曰「新元素」。乃行是術曰。
    若「位置」小於一者。
        乃得「錯誤小於一」。
    云云。
    /* If position is beyond array length, append to end */
    夫「陣列」之長。名之曰「陣列長度」。
    若「位置」大於「陣列長度」者。
        昔之「位置」者。今「陣列長度」是矣。
        加「位置」以一。昔之「位置」者。今其是矣。
    云云。
    
    吾有一列。名之曰「新陣列」。
    吾有一數。名之曰「索引」。
    昔之「索引」者。今一是矣。
    
    /* Copy elements before insertion point */
    恆為是。
        若「索引」等於「位置」者。乃止。云云。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        充「新陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    /* Insert new element */
    充「新陣列」以「新元素」。
    
    /* Copy remaining elements */
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        充「新陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「新陣列」。
是謂「陣列插入」之術也。

/* === Array Concatenation === */

/* Concatenate two arrays */
吾有一術。名之曰「陣列拼接」。欲行是術。必先得二物。曰「陣列甲」。曰「陣列乙」。乃行是術曰。
    吾有一列。名之曰「結果陣列」。
    吾有一數。名之曰「索引」。
    
    /* Copy first array */
    昔之「索引」者。今一是矣。
    恆為是。
        若「索引」大於「陣列甲」之長者。乃止。云云。
        夫「陣列甲」之「索引」。名之曰「當前元素」。
        充「結果陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    /* Copy second array */
    昔之「索引」者。今一是矣。
    恆為是。
        若「索引」大於「陣列乙」之長者。乃止。云云。
        夫「陣列乙」之「索引」。名之曰「當前元素」。
        充「結果陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「結果陣列」。
是謂「陣列拼接」之術也。

/* === Array Slicing === */

/* Get subarray from start to end */
吾有一術。名之曰「陣列切片」。欲行是術。必先得三物。曰「陣列」。曰「開始」。曰「結束」。乃行是術曰。
    若「開始」小於一者。
        昔之「開始」者。今一是矣。
    云云。
    夫「陣列」之長。名之曰「陣列長度」。
    若「結束」大於「陣列長度」者。
        昔之「結束」者。今「陣列長度」是矣。
    云云。
    若「開始」大於「結束」者。
        吾有一列。名之曰「空結果」。
        乃得「空結果」。
    云云。
    
    吾有一列。名之曰「結果陣列」。
    吾有一數。名之曰「索引」。
    昔之「索引」者。今「開始」是矣。
    
    恆為是。
        若「索引」大於「結束」者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        充「結果陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「結果陣列」。
是謂「陣列切片」之術也。

/* === Array Filtering === */

/* Filter array keeping only elements equal to target */
吾有一術。名之曰「陣列過濾」。欲行是術。必先得二物。曰「陣列」。曰「目標值」。乃行是術曰。
    吾有一列。名之曰「結果陣列」。
    吾有一數。名之曰「索引」。
    昔之「索引」者。今一是矣。
    
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        若「當前元素」等於「目標值」者。
            充「結果陣列」以「當前元素」。
        云云。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「結果陣列」。
是謂「陣列過濾」之術也。

/* === Array Sorting === */

/* Flexible sorting with custom comparison types */
吾有一術。名之曰「陣列排序」。欲行是術。必先得二物。曰「陣列」。曰「比較類型」。乃行是術曰。
    吾有一列。名之曰「結果陣列」。
    吾有一列。名之曰「剩餘陣列」。
    吾有一數。名之曰「索引」。
    
    /* Copy original array to remaining array */
    昔之「索引」者。今一是矣。
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        充「剩餘陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    /* Selection sort with custom comparison */
    恆為是。
        若「剩餘陣列」之長等於〇者。乃止。云云。
        
        /* Find element according to comparison type */
        夫「剩餘陣列」之一。名之曰「選定值」。
        吾有一數。名之曰「選定索引」。
        昔之「選定索引」者。今一是矣。
        
        昔之「索引」者。今二是矣。
        恆為是。
            若「索引」大於「剩餘陣列」之長者。乃止。云云。
            夫「剩餘陣列」之「索引」。名之曰「當前值」。
            
            /* Apply comparison based on type */
            若「比較類型」等於「升序」者。
                若「當前值」小於「選定值」者。
                    昔之「選定值」者。今「當前值」是矣。
                    昔之「選定索引」者。今「索引」是矣。
                云云。
            云云。
            若「比較類型」等於「降序」者。
                若「當前值」大於「選定值」者。
                    昔之「選定值」者。今「當前值」是矣。
                    昔之「選定索引」者。今「索引」是矣。
                云云。
            云云。
            若「比較類型」等於「按絕對值升序」者。
                吾有一數。名之曰「當前絕對值」。
                昔之「當前絕對值」者。今「當前值」是矣。
                若「當前絕對值」小於〇者。
                    乘「當前絕對值」以負一。昔之「當前絕對值」者。今其是矣。
                云云。
                吾有一數。名之曰「選定絕對值」。
                昔之「選定絕對值」者。今「選定值」是矣。
                若「選定絕對值」小於〇者。
                    乘「選定絕對值」以負一。昔之「選定絕對值」者。今其是矣。
                云云。
                若「當前絕對值」小於「選定絕對值」者。
                    昔之「選定值」者。今「當前值」是矣。
                    昔之「選定索引」者。今「索引」是矣。
                云云。
            云云。
            若「比較類型」等於「按絕對值降序」者。
                吾有一數。名之曰「當前絕對值」。
                昔之「當前絕對值」者。今「當前值」是矣。
                若「當前絕對值」小於〇者。
                    乘「當前絕對值」以負一。昔之「當前絕對值」者。今其是矣。
                云云。
                吾有一數。名之曰「選定絕對值」。
                昔之「選定絕對值」者。今「選定值」是矣。
                若「選定絕對值」小於〇者。
                    乘「選定絕對值」以負一。昔之「選定絕對值」者。今其是矣。
                云云。
                若「當前絕對值」大於「選定絕對值」者。
                    昔之「選定值」者。今「當前值」是矣。
                    昔之「選定索引」者。今「索引」是矣。
                云云。
            云云。
            
            加「索引」以一。昔之「索引」者。今其是矣。
        云云。
        
        /* Add selected element to result */
        充「結果陣列」以「選定值」。
        
        /* Remove selected element from remaining array */
        吾有一列。名之曰「新剩餘陣列」。
        昔之「索引」者。今一是矣。
        恆為是。
            若「索引」大於「剩餘陣列」之長者。乃止。云云。
            若「索引」不等於「選定索引」者。
                夫「剩餘陣列」之「索引」。名之曰「元素」。
                充「新剩餘陣列」以「元素」。
            云云。
            加「索引」以一。昔之「索引」者。今其是矣。
        云云。
        
        /* Update remaining array - Remove inefficient temp variable */
        昔之「剩餘陣列」者。今「新剩餘陣列」是矣。
    云云。
    
    乃得「結果陣列」。
是謂「陣列排序」之術也。

/* === Array Utilities === */

/* Reverse an array */
吾有一術。名之曰「陣列反轉」。欲行是術。必先得一物。曰「陣列」。乃行是術曰。
    吾有一列。名之曰「結果陣列」。
    吾有一數。名之曰「索引」。
    夫「陣列」之長。名之曰「陣列長度」。
    昔之「索引」者。今「陣列長度」是矣。
    
    恆為是。
        若「索引」小於一者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        充「結果陣列」以「當前元素」。
        減「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「結果陣列」。
是謂「陣列反轉」之術也。

/* Search for element in array */
吾有一術。名之曰「陣列搜尋」。欲行是術。必先得二物。曰「陣列」。曰「目標值」。乃行是術曰。
    吾有一數。名之曰「索引」。
    昔之「索引」者。今一是矣。
    
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        若「當前元素」等於「目標值」者。
            乃得「索引」。
        云云。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得〇。
是謂「陣列搜尋」之術也。

/* Copy array */
吾有一術。名之曰「陣列複製」。欲行是術。必先得一物。曰「陣列」。乃行是術曰。
    吾有一列。名之曰「新陣列」。
    吾有一數。名之曰「索引」。
    昔之「索引」者。今一是矣。
    
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        充「新陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「新陣列」。
是謂「陣列複製」之術也。

/* Check if two arrays are equal */
吾有一術。名之曰「陣列相等」。欲行是術。必先得二物。曰「陣列甲」。曰「陣列乙」。乃行是術曰。
    若「陣列甲」之長不等於「陣列乙」之長者。
        乃得陰。
    云云。
    
    吾有一數。名之曰「索引」。
    昔之「索引」者。今一是矣。
    
    恆為是。
        若「索引」大於「陣列甲」之長者。乃止。云云。
        夫「陣列甲」之「索引」。名之曰「元素甲」。
        夫「陣列乙」之「索引」。名之曰「元素乙」。
        若「元素甲」不等於「元素乙」者。
            乃得陰。
        云云。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得陽。
是謂「陣列相等」之術也。

/* === Array Transform Functions === */

/* Generic map function supporting multiple operations */
吾有一術。名之曰「陣列映射」。欲行是術。必先得三物。曰「陣列」。曰「操作類型」。曰「參數」。乃行是術曰。
    吾有一列。名之曰「結果陣列」。
    吾有一數。名之曰「索引」。
    昔之「索引」者。今一是矣。
    
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「原始元素」。
        吾有一物。名之曰「轉換結果」。
        
        /* Support different operation types */
        若「操作類型」等於「乘法」者。
            昔之「轉換結果」者。今「原始元素」是矣。
            乘「轉換結果」以「參數」。昔之「轉換結果」者。今其是矣。
        云云。
        若「操作類型」等於「加法」者。
            昔之「轉換結果」者。今「原始元素」是矣。
            加「轉換結果」以「參數」。昔之「轉換結果」者。今其是矣。
        云云。
        若「操作類型」等於「減法」者。
            昔之「轉換結果」者。今「原始元素」是矣。
            減「轉換結果」以「參數」。昔之「轉換結果」者。今其是矣。
        云云。
        若「操作類型」等於「除法」者。
            若「參數」等於〇者。
                昔之「轉換結果」者。今「原始元素」是矣。
            云云。
            若「參數」不等於〇者。
                昔之「轉換結果」者。今「原始元素」是矣。
                除「轉換結果」以「參數」。昔之「轉換結果」者。今其是矣。
            云云。
        云云。
        若「操作類型」等於「平方」者。
            昔之「轉換結果」者。今「原始元素」是矣。
            乘「轉換結果」以「原始元素」。昔之「轉換結果」者。今其是矣。
        云云。
        若「操作類型」等於「取負」者。
            昔之「轉換結果」者。今「原始元素」是矣。
            乘「轉換結果」以負一。昔之「轉換結果」者。今其是矣。
        云云。
        若「操作類型」等於「絕對值」者。
            昔之「轉換結果」者。今「原始元素」是矣。
            若「轉換結果」小於〇者。
                乘「轉換結果」以負一。昔之「轉換結果」者。今其是矣。
            云云。
        云云。
        若「操作類型」等於「恆等」者。
            昔之「轉換結果」者。今「原始元素」是矣。
        云云。
        
        充「結果陣列」以「轉換結果」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「結果陣列」。
是謂「陣列映射」之術也。

/* Generic fold/reduce function supporting multiple operations */
吾有一術。名之曰「陣列折疊」。欲行是術。必先得三物。曰「陣列」。曰「初始值」。曰「操作類型」。乃行是術曰。
    吾有一物。名之曰「累積」。
    昔之「累積」者。今「初始值」是矣。
    吾有一數。名之曰「索引」。
    昔之「索引」者。今一是矣。
    
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        
        /* Support different fold operations */
        若「操作類型」等於「加法」者。
            加「累積」以「當前元素」。昔之「累積」者。今其是矣。
        云云。
        若「操作類型」等於「乘法」者。
            乘「累積」以「當前元素」。昔之「累積」者。今其是矣。
        云云。
        若「操作類型」等於「減法」者。
            減「累積」以「當前元素」。昔之「累積」者。今其是矣。
        云云。
        若「操作類型」等於「最大值」者。
            若「當前元素」大於「累積」者。
                昔之「累積」者。今「當前元素」是矣。
            云云。
        云云。
        若「操作類型」等於「最小值」者。
            若「當前元素」小於「累積」者。
                昔之「累積」者。今「當前元素」是矣。
            云云。
        云云。
        若「操作類型」等於「計數」者。
            若「當前元素」等於「初始值」者。
                加「累積」以一。昔之「累積」者。今其是矣。
            云云。
        云云。
        若「操作類型」等於「字符串拼接」者。
            吾有一言。名之曰「字符串累積」。
            昔之「字符串累積」者。今「累積」是矣。
            吾有一言。名之曰「當前字符串」。
            昔之「當前字符串」者。今「當前元素」是矣。
            昔之「累積」者。今「字符串累積」「當前字符串」是矣。
        云云。
        
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「累積」。
是謂「陣列折疊」之術也。

/* === Additional Array Operations === */

/* Remove element at index */
吾有一術。名之曰「陣列移除」。欲行是術。必先得二物。曰「陣列」。曰「索引」。乃行是術曰。
    若「索引」小於一者。
        乃得「錯誤小於一」。
    云云。
    若「索引」大於「陣列」之長者。
        乃得「錯誤超出範圍」。
    云云。
    
    吾有一列。名之曰「新陣列」。
    吾有一數。名之曰「當前索引」。
    昔之「當前索引」者。今一是矣。
    
    恆為是。
        若「當前索引」大於「陣列」之長者。乃止。云云。
        若「當前索引」不等於「索引」者。
            夫「陣列」之「當前索引」。名之曰「當前元素」。
            充「新陣列」以「當前元素」。
        云云。
        加「當前索引」以一。昔之「當前索引」者。今其是矣。
    云云。
    
    乃得「新陣列」。
是謂「陣列移除」之術也。

/* Remove first occurrence of element by value */
吾有一術。名之曰「陣列移除值」。欲行是術。必先得二物。曰「陣列」。曰「目標值」。乃行是術曰。
    吾有一列。名之曰「新陣列」。
    吾有一數。名之曰「索引」。
    吾有一爻。名之曰「已移除」。
    昔之「索引」者。今一是矣。
    昔之「已移除」者。今陰是矣。
    
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        
        /* Skip first occurrence of target value */
        若「當前元素」等於「目標值」者。
            若「已移除」等於陰者。
                昔之「已移除」者。今陽是矣。
            云云。
            若「已移除」等於陽者。
                充「新陣列」以「當前元素」。
            云云。
        云云。
        若「當前元素」不等於「目標值」者。
            充「新陣列」以「當前元素」。
        云云。
        
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「新陣列」。
是謂「陣列移除值」之術也。

/* Remove and return first element (shift operation) */
吾有一術。名之曰「陣列位移」。欲行是術。必先得一物。曰「陣列」。乃行是術曰。
    若「陣列」之長等於〇者。
        乃得「錯誤空陣列」。
    云云。
    
    夫「陣列」之一。名之曰「第一元素」。
    
    吾有一列。名之曰「新陣列」。
    吾有一數。名之曰「索引」。
    昔之「索引」者。今二是矣。
    
    恆為是。
        若「索引」大於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        充「新陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「第一元素」。
是謂「陣列位移」之術也。

/* Pop last element from array - returns modified array with last element removed */
吾有一術。名之曰「陣列彈出」。欲行是術。必先得一物。曰「陣列」。乃行是術曰。
    若「陣列」之長等於〇者。
        乃得「錯誤空陣列」。
    云云。
    
    吾有一列。名之曰「新陣列」。
    吾有一數。名之曰「索引」。
    昔之「索引」者。今一是矣。
    
    恆為是。
        若「索引」等於「陣列」之長者。乃止。云云。
        夫「陣列」之「索引」。名之曰「當前元素」。
        充「新陣列」以「當前元素」。
        加「索引」以一。昔之「索引」者。今其是矣。
    云云。
    
    乃得「新陣列」。
是謂「陣列彈出」之術也。

/* Get last element of array without modifying array */
吾有一術。名之曰「取陣列尾元素」。欲行是術。必先得一物。曰「陣列」。乃行是術曰。
    若「陣列」之長等於〇者。
        乃得「錯誤空陣列」。
    云云。
    
    夫「陣列」之長。名之曰「陣列長度」。
    夫「陣列」之「陣列長度」。名之曰「最後元素」。
    
    乃得「最後元素」。
是謂「取陣列尾元素」之術也。