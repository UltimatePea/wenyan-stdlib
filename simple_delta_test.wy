/* Delta Critical Issues Test
 * Author: Whisky, PR Worker
 * Verifies key algorithmic fixes for PR #45
 */

注曰「模運算函數」
吾有一術。名之曰「求餘數」。欲行是術。必先得二數。曰「被除數」。曰「除數」。乃行是術曰。
    若「被除數」小於零者。乃得零。云云。
    若「除數」小於零者。乃得零。云云。
    若「除數」等於零者。乃得零。云云。
    若「被除數」小於「除數」者。乃得「被除數」。云云。
    
    吾有一數。名之曰「餘數」。昔之「餘數」者。今「被除數」也。
    恆為是。
        若「餘數」小於「除數」者。乃止。云云。
        減「餘數」以「除數」。名之曰「餘數」。
    云云。
    乃得「餘數」。
是謂「求餘數」之術也。

注曰「閏年判斷」
吾有一術。名之曰「是否閏年」。欲行是術。必先得一數。曰「年份」。乃行是術曰。
    施「求餘數」於「年份」於四百。名之曰「餘四百」。
    若「餘四百」等於零者。乃得一。云云。
    施「求餘數」於「年份」於一百。名之曰「餘一百」。
    若「餘一百」等於零者。乃得零。云云。
    施「求餘數」於「年份」於四。名之曰「餘四」。
    若「餘四」等於零者。乃得一。云云。
    乃得零。
是謂「是否閏年」之術也。

書之曰「「=== Delta Issues Test ===」」。

書之曰「「Test 1: Modular arithmetic」」。
施「求餘數」於八於三。名之曰「八除三」。
書之曰「「8 % 3 = 」」。書「八除三」。

施「求餘數」於二千於四。名之曰「二千除四」。
書之曰「「2000 % 4 = 」」。書「二千除四」。

書之曰「「Test 2: Leap years」」。
施「是否閏年」於二千。名之曰「年2000」。
書之曰「「2000: 」」。書「年2000」。

施「是否閏年」於一千九百。名之曰「年1900」。
書之曰「「1900: 」」。書「年1900」。

施「是否閏年」於二千一百。名之曰「年2100」。
書之曰「「2100: 」」。書「年2100」。

書之曰「「=== Test Complete ===」」。