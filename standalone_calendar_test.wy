/* 獨立測試曆經庫核心功能
 * Author: Whisky, PR Worker
 * Testing core calendar functions without imports to isolate Delta's reported issues
 */

書之曰「「=== 獨立曆經庫功能測試 ===」」。

注曰「複製模運算函數進行獨立測試」
吾有一術。名之曰「求餘數」。欲行是術。必先得二數。曰「被除數」。曰「除數」。乃行是術曰。
    注曰「處理邊界情況」
    若「被除數」小於零者。
        乃得零。
    云云。
    若「除數」小於零者。
        乃得零。
    云云。
    若「除數」等於零者。
        乃得零。
    云云。
    
    注曰「如果被除數小於除數，直接返回被除數」
    若「被除數」小於「除數」者。
        乃得「被除數」。
    云云。
    
    注曰「通過減法循環計算餘數」
    吾有一數。名之曰「餘數」。昔之「餘數」者。今「被除數」也。
    
    恆為是。
        若「餘數」小於「除數」者。乃止。云云。
        減「餘數」以「除數」。名之曰「餘數」。
    云云。
    
    乃得「餘數」。
是謂「求餘數」之術也。

注曰「複製閏年判斷函數」
吾有一術。名之曰「是否閏年」。欲行是術。必先得一數。曰「年份」。乃行是術曰。
    注曰「檢查是否能被400整除」
    施「求餘數」於「年份」於四百。名之曰「餘四百」。
    若「餘四百」等於零者。
        乃得一。
    云云。
    
    注曰「檢查是否能被100整除」
    施「求餘數」於「年份」於一百。名之曰「餘一百」。
    若「餘一百」等於零者。
        乃得零。
    云云。
    
    注曰「檢查是否能被4整除」
    施「求餘數」於「年份」於四。名之曰「餘四」。
    若「餘四」等於零者。
        乃得一。
    云云。
    
    乃得零。
是謂「是否閏年」之術也。

書之曰「「測試1：模運算基本功能」」。

施「求餘數」於八於三。名之曰「八除三餘數」。
書之曰「「8 % 3 = 」」。
書「八除三餘數」。

施「求餘數」於十於三。名之曰「十除三餘數」。
書之曰「「10 % 3 = 」」。
書「十除三餘數」。

施「求餘數」於二千於四。名之曰「二千除四餘數」。
書之曰「「2000 % 4 = 」」。
書「二千除四餘數」。

施「求餘數」於一千九百於四。名之曰「一九零零除四餘數」。
書之曰「「1900 % 4 = 」」。
書「一九零零除四餘數」。

書之曰「「測試2：閏年判斷關鍵案例」」。

施「是否閏年」於二千。名之曰「二千年閏年」。
書之曰「「2000 is leap year: 」」。
書「二千年閏年」。

施「是否閏年」於一千九百。名之曰「一九零零閏年」。
書之曰「「1900 is leap year: 」」。
書「一九零零閏年」。

施「是否閏年」於二千零二十。名之曰「二零二零閏年」。
書之曰「「2020 is leap year: 」」。
書「二零二零閏年」。

施「是否閏年」於二千零二十一。名之曰「二零二一閏年」。
書之曰「「2021 is leap year: 」」。
書「二零二一閏年」。

施「是否閏年」於二千一百。名之曰「二一零零閏年」。
書之曰「「2100 is leap year: 」」。
書「二一零零閏年」。

書之曰「「=== 測試完成 ===」」。